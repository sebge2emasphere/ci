apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: ci
  name: sonar
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar
    spec:
      imagePullSecrets:
        - name: com.emasphere.dev.ecr
      initContainers:
        - name: take-data-dir-ownership
          image: alpine:3.6
          command:
            - chown
            - -R
            - 999:999
            - /opt/sonarqube/conf
            - /opt/sonarqube/data
          volumeMounts:
            - name: sonar-conf
              mountPath: "/opt/sonarqube/conf/"
              subPath: sonar-conf
            - name: sonar-data
              mountPath: "/opt/sonarqube/data/"
              subPath: sonar-data
      containers:
        - name: sonar-server
          image: 840205991060.dkr.ecr.eu-central-1.amazonaws.com/dev/sonar:1.0.0
          imagePullPolicy: Always
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            runAsNonRoot: true
          ports:
            - name: http-port
              containerPort: 9000
          env:
            - name: SONAR_JDBC_URL
              value: jdbc:postgresql://postgres:5432/sonar
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: sonar.search.javaAdditionalOpts
              value: -Dnode.store.allow_mmapfs=false
            - name: SONAR_URL
              valueFrom:
                configMapKeyRef:
                  name: environment-config
                  key: SONAR_URL
            - name: ADMINISTRATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-admin-credentials
                  key: text
            - name: GOOGLE_OAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: google-sonar-oauth-secret
                  key: text
          lifecycle:
            postStart:
              exec:
                command:
                  - "/usr/bin/sonar-as-code"
                  - "setup"
                  - "-f"
                  - "/shared/sonar.yaml"
                  - "-s"
                  - "http://localhost:9000"
          volumeMounts:
            - name: sonar-conf
              mountPath: "/opt/sonarqube/conf/"
              subPath: sonar-conf
            - name: sonar-data
              mountPath: "/opt/sonarqube/data/"
              subPath: sonar-data
          resources:
            limits:
              memory: "2000Mi"
      volumes:
        - name: sonar-conf
          persistentVolumeClaim:
            claimName: sonar-conf-pv-claim
        - name: sonar-data
          persistentVolumeClaim:
            claimName: sonar-data-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  namespace: ci
  name: sonar
spec:
  type: NodePort
  ports:
    - name: http
      port: 9000
      targetPort: 9000
  selector:
    app: sonar
