apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: ci
  name: sonar
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar
    spec:
      imagePullSecrets:
        - name: com.emasphere.dev.ecr
      containers:
        - name: sonar-server
          image: 840205991060.dkr.ecr.eu-central-1.amazonaws.com/dev/sonar:1.0.0
          imagePullPolicy: Always
          ports:
            - name: http-port
              containerPort: 9000
          env:
            - name: SONAR_JDBC_URL
              value: jdbc:postgresql://postgres:5432/sonar
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: sonar.search.javaAdditionalOpts
              value: -Dnode.store.allow_mmapfs=false
            - name: SONAR_URL
              valueFrom:
                configMapKeyRef:
                  name: environment-config
                  key: SONAR_URL
#        volumeMounts:
#          - mountPath: "/opt/sonarqube/conf/"
#            name: sonarqube-conf
#          - mountPath: "/opt/sonarqube/data/"
#            name: sonarqube-data
#          - mountPath: "/opt/sonarqube/extensions/"
#            name: sonarqube-extensions
          resources:
            limits:
              memory: "2000Mi"
#      volumes:
#        - name: sonarqube-conf
#          persistentVolumeClaim:
#            claimName: sonarqube-conf-pv-claim
#        - name: sonarqube-data
#          persistentVolumeClaim:
#            claimName: sonarqube-data-pv-claim
#        - name: sonarqube-extensions
#          persistentVolumeClaim:
#            claimName: sonarqube-extensions-pv-claim
