apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  namespace: ci
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      imagePullSecrets:
        - name: com.emasphere.dev.ecr
      containers:
        - name: postgres
          image: 840205991060.dkr.ecr.eu-central-1.amazonaws.com/dev/postgres:11.4
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_MULTIPLE_DATABASES
              value: jenkins,sonar
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
          volumeMounts:
            - name: postgredb
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ci
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  namespace: ci
  labels:
    app: postgres
spec:
  storageClassName: standard
  capacity:
    storage: 500m
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  namespace: ci
  labels:
    app: postgres
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500m

