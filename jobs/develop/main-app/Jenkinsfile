pipeline {
    agent {
        kubernetes {
            label 'mobile-build'
            yaml """
spec:
  imagePullSecrets:
    - name: com.emasphere.dev.ecr
  containers:
  - name: nodejs
    image: 840205991060.dkr.ecr.eu-central-1.amazonaws.com/dev/jenkins-container:1.0.0
    imagePullPolicy: Always
    command:
    - cat
    tty: true
"""
        }
    }

    triggers {
        githubPush()
        snapshotDependencies()
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'MINUTES')
    }

    stages {
        stage("Cloning Repo") {
            steps {
                script {
                    properties([pipelineTriggers([snapshotDependencies(), [$class: "GitHubPushTrigger"]])])
                }
                checkout([
                        $class: "GitSCM",
                        branches: [[name: "*/develop"]],
                        userRemoteConfigs: [
                        [url: "https://github.com/EMAsphere/emasphere.git", credentialsId: "github-user-token"]
                    ],
                    extensions: [
                        [$class: "PathRestriction", excludedRegions: "", includedRegions: (${SERVICE_ROOT_PATH} == 'server') ? "${SERVICE_ROOT_PATH}/${SERVICE_MODULE_NAME}/.*" : "${SERVICE_ROOT_PATH}/.*"]
                    ]
                ])
            }
        }
        stage("Build") {
            steps {
                withMaven(maven: "Maven 3") {
                    script {
                        if (${SERVICE_ROOT_PATH} == 'server') {
                            sh "mvn clean install -f ${SERVICE_ROOT_PATH}/${SERVICE_MODULE_NAME}/pom.xml -B -DskipTests -Pci"
                        } else {
                            sh "mvn clean install -f ${SERVICE_ROOT_PATH}/pom.xml -B -DskipTests -Pci"
                        }
                    }
                }
            }
        }
        stage("Test") {
            steps {
                withMaven(maven: "Maven 3") {
                    script {
                        if (${SERVICE_ROOT_PATH} == 'server') {
                            sh "mvn test -f ${SERVICE_ROOT_PATH}/${SERVICE_MODULE_NAME}/pom.xml -B -Pci"
                        } else {
                            sh "mvn test -f ${SERVICE_ROOT_PATH}/pom.xml -B -Pci"
                        }
                    }
                }
            }
        }
        stage("Install") {
            steps {
                withMaven(maven: "Maven 3") {
                    script {
                        if (${SERVICE_ROOT_PATH} == 'server') {
                            sh "mvn install -f ${SERVICE_ROOT_PATH}/${SERVICE_MODULE_NAME}/pom.xml -B -DskipTests -Pci"
                        } else {
                            sh "mvn install -f ${SERVICE_ROOT_PATH}/pom.xml -B -DskipTests -Pci"
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            slackSend (color: '#2eb886', message: "Stable job ${env.JOB_NAME} [${env.BUILD_NUMBER}] (<${env.BUILD_URL}|Open>)")
        }

        changed {
            emailext subject: '$DEFAULT_SUBJECT',
                     body: '$DEFAULT_CONTENT',
                     replyTo: '$DEFAULT_REPLYTO',
                     to: '$DEFAULT_RECIPIENTS'
        }

        failure {
            slackSend (color: '#FF0000', message: "Unstable job ${env.JOB_NAME} [${env.BUILD_NUMBER}] (<${env.BUILD_URL}|Open>)")

            emailext subject: '$DEFAULT_SUBJECT',
                     body: '$DEFAULT_CONTENT',
                     replyTo: '$DEFAULT_REPLYTO',
                     to: '$DEFAULT_RECIPIENTS'
        }
    }
}

