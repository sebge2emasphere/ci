pipeline {
    agent {
        kubernetes {
          label 'mobile-build'
          containerTemplate {
            name 'node'
            image '840205991060.dkr.ecr.eu-central-1.amazonaws.com/dev/ema-jenkins-container:1.0.0'
            imagePullSecrets 'com.emasphere.dev.ecr'
            ttyEnabled true
            command 'cat'
          }
        }
    }

    triggers {
        githubPush()
        snapshotDependencies()
    }

    tools {
        maven "Maven 3"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "5"))
    }

    stages {
        stage("Cloning Repo") {
         steps {
            script {
                properties([pipelineTriggers([snapshotDependencies(), [$class: "GitHubPushTrigger"]])])
            }
            checkout([$class: "GitSCM",
              branches: [[name: "*/develop"]],
              userRemoteConfigs: [
                [url: "https://github.com/EMAsphere/emasphere.git", credentialsId: "b35f24b1-359a-41b4-a342-c1bddbd4b9b8"]
              ],
              extensions: [
                [$class: "PathRestriction", excludedRegions: "", includedRegions: "${SERVICE_ROOT_PATH}/.*"]
              ]
            ])
         }
        }
        stage("Build") {
            steps {
                withMaven(maven: "Maven 3") {
                    sh "mvn clean install -pl ${SERVICE_ROOT_PATH}/${SERVICE_MODULE_NAME} -B -DskipTests -Pci --also-make"
                }
            }
        }
//         stage("Test") {
//             steps {
//                 withMaven(maven: "Maven 3") {
//                     sh "cd ${SERVICE_ROOT_PATH} && mvn test -B -Pci -DskipTests "
//                 }
//             }
//         }
//         stage("Deploy") {
//             steps {
//                 withMaven(maven: "Maven 3") {
//                     sh "cd ${SERVICE_ROOT_PATH} && mvn install -B -DskipTests -Pci"
//                 }
//             }
//         }
    }

//     post {
//         changed {
//             emailext subject: "$DEFAULT_SUBJECT",
//                 body: "$DEFAULT_CONTENT",
//                 recipientProviders: [
//                     [$class: "CulpritsRecipientProvider"],
//                     [$class: "DevelopersRecipientProvider"],
//                     [$class: "RequesterRecipientProvider"]
//                 ],
//                 replyTo: "$DEFAULT_REPLYTO",
//                 to: "$DEFAULT_RECIPIENTS"
//         }
//     }
}

